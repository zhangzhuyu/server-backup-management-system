<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ly.cloud.auth.mapper.SysUserMapper">

	<resultMap type="com.ly.cloud.auth.po.SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<result property="userName"     column="user_name"    />
		<result property="nickName"     column="nick_name"    />
		<result property="password"     column="password"     />
		<result property="status"       column="status"       />
		<result property="remark"       column="remark"       />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
	</resultMap>

	<resultMap id="RoleResult" type="com.ly.cloud.auth.po.SysRole">
		<id     property="role_id"       column="role_id"        />
		<result property="role_name"     column="role_name"      />
		<result property="role_key"      column="role_key"       />
		<result property="role_sort"     column="role_sort"      />
		<result property="status"       column="role_status"    />
	</resultMap>
	
	<sql id="selectUserVo">
        select u.user_id, u.user_name, u.nick_name,  u.password, u.status, u.remark,
       r.role_id, r.role_name, r.role_key, r.role_sort, r.status as role_status
from ly_sys_user u
         left join ly_sys_user_role ur on u.user_id = ur.user_id
         left join ly_sys_role r on r.role_id = ur.role_id
    </sql>
<!--	<insert id="insertUser" parameterType="com.ly.cloud.auth.po.SysUser" useGeneratedKeys="true" keyProperty="userId">-->
<!--		insert into ly_sys_user(-->
<!--		<if test="userId != null and userId != 0">user_id,</if>-->
<!--		<if test="userName != null and userName != ''">user_name,</if>-->
<!--		<if test="nickName != null and nickName != ''">nick_name,</if>-->
<!--		<if test="email != null and email != ''">email,</if>-->
<!--		<if test="phone != null and phone != ''">phone,</if>-->
<!--		<if test="password != null and password != ''">password,</if>-->
<!--		<if test="status != null and status != ''">status,</if>-->
<!--		<if test="remark != null and remark != ''">remark,</if>-->
<!--		)values(-->
<!--		<if test="userId != null and userId != ''">#{userId},</if>-->
<!--		<if test="userName != null and userName != ''">#{userName},</if>-->
<!--		<if test="nickName != null and nickName != ''">#{nickName},</if>-->
<!--		<if test="email != null and email != ''">#{email},</if>-->
<!--		<if test="phone != null and phone != ''">#{phone},</if>-->
<!--		<if test="password != null and password != ''">#{password},</if>-->
<!--		<if test="status != null and status != ''">#{status},</if>-->
<!--		<if test="remark != null and remark != ''">#{remark},</if>-->
<!--		)-->
<!--	</insert>-->

	<select id="selectUserList" parameterType="com.ly.cloud.auth.po.SysUser" resultMap="SysUserResult">
		select distinct u.user_id, u.user_name, u.nick_name, u.status
		from ly_sys_user u
		left join ly_sys_user_role ur on u.user_id = ur.user_id
		left join ly_sys_role r on r.role_id = ur.role_id
		<where>
		<if test="user.userId != null and user.userId != 0">
			u.user_id = #{user.userId}
		</if>
		<if test="user.userName != null and user.userName != ''">
			AND u.user_name like concat('%', #{user.userName}, '%')
		</if>
		<if test="user.status != null and user.status != ''">
			AND u.status = #{user.status}
		</if>
		</where>
	</select>

	<select id="selectAllocatedList" parameterType="com.ly.cloud.auth.po.SysUser" resultMap="SysUserResult">
		select distinct u.user_id,  u.user_name, u.nick_name,  u.status
		from ly_sys_user u
		left join ly_sys_user_role ur on u.user_id = ur.user_id
		left join ly_sys_role r on r.role_id = ur.role_id
	    where  r.role_id = #{role_id}
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
	</select>

	<select id="selectUnallocatedList" parameterType="com.ly.cloud.auth.po.SysUser" resultMap="SysUserResult">
		select distinct u.user_id,  u.user_name, u.nick_name,  u.status
		from ly_sys_user u
		left join ly_sys_user_role ur on u.user_id = ur.user_id
		left join ly_sys_role r on r.role_id = ur.role_id
	    where (r.role_id != #{role_id} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from ly_sys_user u inner join ly_sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{role_id})
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName}
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultType="int">
		select count(1) from ly_sys_user where user_name = #{userName} limit 1
	</select>

	<update id="updateUser" parameterType="com.ly.cloud.auth.po.SysUser">
 		update ly_sys_user
 		<set>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="remark != null">remark = #{remark},</if>
 		</set>
 		where user_id = #{userId}
	</update>


	<update id="resetUserPwd" parameterType="com.ly.cloud.auth.po.SysUser">
 		update ly_sys_user set password = #{password} where user_name = #{userName}
	</update>

	<delete id="deleteUserById" parameterType="Long">
		delete from ly_sys_user where user_id = #{userId}
 	</delete>

 	<delete id="deleteUserByIds" parameterType="Long">
		delete from ly_sys_user where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>
	
</mapper> 